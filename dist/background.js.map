{"version":3,"file":"background.js","mappings":";;;;AAAAA,MAAM,CAACC,OAAO,CAACC,WAAW,CAACC,WAAW,CAAC,MAAM,CAE7C,CAAC,CAAC;AAEF,IAAIC,uBAAuB,GAAG,KAAK;AAEnCJ,MAAM,CAACK,MAAM,CAACC,SAAS,CAACH,WAAW,CAAEI,GAAG,IAAK;EAC5C;EACAC,OAAO,CAACC,GAAG,CAAC,4DAA4D,EAAEL,uBAAuB,CAAC;EAClG,IAAI,CAACA,uBAAuB,EAAE;IAC7BJ,MAAM,CAACU,SAAS,CAACC,aAAa,CAAC;MAC9BC,MAAM,EAAE;QAAEC,KAAK,EAAEN,GAAG,CAACO;MAAG,CAAC;MACzBC,KAAK,EAAE,CAAC,YAAY;IACrB,CAAC,EAAGC,gBAAgB,IAAK;MACxB;MACA,IAAIhB,MAAM,CAACC,OAAO,CAACgB,SAAS,EAAE;QAC7BT,OAAO,CAACU,KAAK,CAAClB,MAAM,CAACC,OAAO,CAACgB,SAAS,CAACE,OAAO,CAAC;MAChD,CAAC,MAAM;QACNf,uBAAuB,GAAG,IAAI;MAC/B;IACD,CAAC,CAAC;EACH,CAAC,MAAM;IACN;IACAJ,MAAM,CAACU,SAAS,CAACC,aAAa,CAAC;MAC9BC,MAAM,EAAE;QAAEC,KAAK,EAAEN,GAAG,CAACO;MAAG,CAAC;MACzBM,QAAQ,EAAEC;IACX,CAAC,EAAE,MAAM;MACR,IAAIrB,MAAM,CAACC,OAAO,CAACgB,SAAS,EAAE;QAC7BT,OAAO,CAACU,KAAK,CAAClB,MAAM,CAACC,OAAO,CAACgB,SAAS,CAACE,OAAO,CAAC;MAChD,CAAC,MAAM;QACNf,uBAAuB,GAAG,KAAK;MAChC;IACD,CAAC,CAAC;EACH;AACD,CAAC,CAAC;AAEF,SAASiB,uBAAuBA,CAAA,EAAG;EAClC,MAAMC,eAAe,GAAGC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;EACrE,MAAMC,cAAc,GAAGF,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;EACpE,IAAIF,eAAe,EAAE;IACpBA,eAAe,CAACI,MAAM,CAAC,CAAC,EAAE;EAC3B;EACA,IAAID,cAAc,EAAC;IAClBA,cAAc,CAACC,MAAM,CAAC,CAAC;EACxB;AACD;AAEA1B,MAAM,CAACC,OAAO,CAAC0B,SAAS,CAACxB,WAAW,CAAC,CAACgB,OAAO,EAAES,MAAM,EAAEC,YAAY,KAAK;EACpE;EACH,IAAIV,OAAO,CAACd,MAAM,KAAK,cAAc,EAAE;IAChCG,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCL,uBAAuB,GAAI,KAAK;EACpC;AACJ,CAAC,CAAC,C","sources":["webpack://font-tester/./src/background.js"],"sourcesContent":["chrome.runtime.onInstalled.addListener(() => {\n\n})\n\nlet isContentScriptInjected = false\n\nchrome.action.onClicked.addListener((tab) => {\n\t// alert(\"action performed\")\n\tconsole.log('Extension icon clicked, attempting to inject content.js...', isContentScriptInjected)\n\tif (!isContentScriptInjected) {\n\t\tchrome.scripting.executeScript({\n\t\t\ttarget: { tabId: tab.id },\n\t\t\tfiles: ['content.js']\n\t\t}, (injectionResults) => {\n\t\t\t// failed to inject script\n\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\tconsole.error(chrome.runtime.lastError.message)\n\t\t\t} else {\n\t\t\t\tisContentScriptInjected = true\n\t\t\t}\n\t\t});\n\t} else {\n\t\t// Remove the content by re-executing the content script with a toggle function or a cleanup\n\t\tchrome.scripting.executeScript({\n\t\t\ttarget: { tabId: tab.id },\n\t\t\tfunction: toggleContentVisibility\n\t\t}, () => {\n\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\tconsole.error(chrome.runtime.lastError.message)\n\t\t\t} else {\n\t\t\t\tisContentScriptInjected = false\n\t\t\t}\n\t\t})\n\t}\n})\n\nfunction toggleContentVisibility() {\n\tconst injectedElement = document.getElementById('font-selector-root')\n\tconst injectedScript = document.getElementById('font-tester-script')\n\tif (injectedElement) {\n\t\tinjectedElement.remove()  // Remove the element if it exists\n\t}\n\tif (injectedScript){\n\t\tinjectedScript.remove()\n\t}\n}\n\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    // if widget closed from content.js file, by clicking on the close button\n\tif (message.action === 'widgetClosed') {\n        console.log(\"closed from content.js\")\n        isContentScriptInjected  = false\n    }\n})"],"names":["chrome","runtime","onInstalled","addListener","isContentScriptInjected","action","onClicked","tab","console","log","scripting","executeScript","target","tabId","id","files","injectionResults","lastError","error","message","function","toggleContentVisibility","injectedElement","document","getElementById","injectedScript","remove","onMessage","sender","sendResponse"],"sourceRoot":""}